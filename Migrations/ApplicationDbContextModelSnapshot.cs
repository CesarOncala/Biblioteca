// <auto-generated />
using System;
using Biblioteca.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Biblioteca.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Biblioteca.models.Autor", b =>
                {
                    b.Property<int>("CodAut")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CodPai")
                        .HasColumnType("integer");

                    b.Property<string>("NomAut")
                        .HasColumnType("text");

                    b.HasKey("CodAut");

                    b.HasIndex("CodPai");

                    b.ToTable("Autor");
                });

            modelBuilder.Entity("Biblioteca.models.Autoria", b =>
                {
                    b.Property<int>("CodAut")
                        .HasColumnType("integer");

                    b.Property<int>("CodObr")
                        .HasColumnType("integer");

                    b.HasKey("CodAut", "CodObr");

                    b.HasIndex("CodObr");

                    b.ToTable("Autoria");
                });

            modelBuilder.Entity("Biblioteca.models.Editora", b =>
                {
                    b.Property<int>("CodEdi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("NomEdi")
                        .HasColumnType("text");

                    b.HasKey("CodEdi");

                    b.ToTable("Editora");
                });

            modelBuilder.Entity("Biblioteca.models.Emprestimo", b =>
                {
                    b.Property<int>("CodObr")
                        .HasColumnType("integer");

                    b.Property<int>("NumExe")
                        .HasColumnType("integer");

                    b.Property<int>("CodUsu")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DatIni")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DatDev")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DatFim")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("CodObr", "NumExe", "CodUsu", "DatIni");

                    b.HasIndex("CodUsu");

                    b.HasIndex("NumExe", "CodObr");

                    b.ToTable("Emprestimo");
                });

            modelBuilder.Entity("Biblioteca.models.Exemplar", b =>
                {
                    b.Property<int>("CodObr")
                        .HasColumnType("integer");

                    b.Property<int>("NumExe")
                        .HasColumnType("integer");

                    b.Property<int>("CodEdi")
                        .HasColumnType("integer");

                    b.Property<float>("ValorExe")
                        .HasColumnType("real");

                    b.HasKey("CodObr", "NumExe");

                    b.HasIndex("CodEdi");

                    b.ToTable("Exemplar");
                });

            modelBuilder.Entity("Biblioteca.models.Obra", b =>
                {
                    b.Property<int>("CodObr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("NomObr")
                        .HasColumnType("text");

                    b.HasKey("CodObr");

                    b.ToTable("Obra");
                });

            modelBuilder.Entity("Biblioteca.models.Pais", b =>
                {
                    b.Property<int>("CodPais")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("NomPais")
                        .HasColumnType("text");

                    b.HasKey("CodPais");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("Biblioteca.models.TipoUsuario", b =>
                {
                    b.Property<int>("TipUsu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DesTipUsu")
                        .HasColumnType("text");

                    b.HasKey("TipUsu");

                    b.ToTable("TipoUsuario");
                });

            modelBuilder.Entity("Biblioteca.models.Usuario", b =>
                {
                    b.Property<int>("CodUsu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("NomUsu")
                        .HasColumnType("text");

                    b.Property<char>("SexoUsu")
                        .HasColumnType("character(1)");

                    b.Property<int>("TipUsu")
                        .HasColumnType("integer");

                    b.HasKey("CodUsu");

                    b.HasIndex("TipUsu");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Biblioteca.models.Autor", b =>
                {
                    b.HasOne("Biblioteca.models.Pais", "Pais")
                        .WithMany("Autores")
                        .HasForeignKey("CodPai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("Biblioteca.models.Autoria", b =>
                {
                    b.HasOne("Biblioteca.models.Autor", "Autor")
                        .WithMany("Autorias")
                        .HasForeignKey("CodAut")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Biblioteca.models.Obra", "Obra")
                        .WithMany("Autorias")
                        .HasForeignKey("CodObr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Obra");
                });

            modelBuilder.Entity("Biblioteca.models.Emprestimo", b =>
                {
                    b.HasOne("Biblioteca.models.Obra", "Obra")
                        .WithMany("Emprestimos")
                        .HasForeignKey("CodObr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Biblioteca.models.Usuario", "Usuario")
                        .WithMany("Emprestimos")
                        .HasForeignKey("CodUsu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Biblioteca.models.Exemplar", "Exemplar")
                        .WithMany("Emprestimos")
                        .HasForeignKey("NumExe", "CodObr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exemplar");

                    b.Navigation("Obra");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Biblioteca.models.Exemplar", b =>
                {
                    b.HasOne("Biblioteca.models.Editora", "Editora")
                        .WithMany("Exemplares")
                        .HasForeignKey("CodEdi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Biblioteca.models.Obra", "Obra")
                        .WithMany("Exemplares")
                        .HasForeignKey("CodObr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Editora");

                    b.Navigation("Obra");
                });

            modelBuilder.Entity("Biblioteca.models.Usuario", b =>
                {
                    b.HasOne("Biblioteca.models.TipoUsuario", "TipoUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("TipUsu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("Biblioteca.models.Autor", b =>
                {
                    b.Navigation("Autorias");
                });

            modelBuilder.Entity("Biblioteca.models.Editora", b =>
                {
                    b.Navigation("Exemplares");
                });

            modelBuilder.Entity("Biblioteca.models.Exemplar", b =>
                {
                    b.Navigation("Emprestimos");
                });

            modelBuilder.Entity("Biblioteca.models.Obra", b =>
                {
                    b.Navigation("Autorias");

                    b.Navigation("Emprestimos");

                    b.Navigation("Exemplares");
                });

            modelBuilder.Entity("Biblioteca.models.Pais", b =>
                {
                    b.Navigation("Autores");
                });

            modelBuilder.Entity("Biblioteca.models.TipoUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Biblioteca.models.Usuario", b =>
                {
                    b.Navigation("Emprestimos");
                });
#pragma warning restore 612, 618
        }
    }
}
